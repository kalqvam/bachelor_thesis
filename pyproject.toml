[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "esg-gmm"
version = "0.1.0"
description = "ESG and financial data analysis toolkit with advanced preprocessing and econometric modeling"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "kalqvam", email = "your.email@example.com"},
]
maintainers = [
    {name = "kalqvam", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research", 
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Office/Business :: Financial",
]
keywords = ["finance", "esg", "econometrics", "time-series", "panel-data"]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    
    "statsmodels>=0.13.0",
    "linearmodels>=4.25",
    
    "optuna>=3.0.0",
    "scikit-learn>=1.0.0",
    
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    
    "requests>=2.25.0",
    
    "tqdm>=4.60.0",
    
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "black>=21.0",
    "isort>=5.0",
    "flake8>=3.8",
    "mypy>=0.900",
    "pre-commit>=2.10",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.15",
]
notebook = [
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "ipywidgets>=7.6.0",
]
r-integration = [
    "rpy2>=3.4.0",
]

[project.urls]
Homepage = "https://github.com/kalqvam/esg_gmm"
Repository = "https://github.com/kalqvam/esg_gmm"
Documentation = "https://github.com/kalqvam/esg_gmm#readme"
"Bug Tracker" = "https://github.com/kalqvam/esg_gmm/issues"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["esg_gmm*"]
exclude = ["tests*", "docs*", "py_scripts*"]

[tool.setuptools.package-data]
"*" = ["*.csv", "*.json", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["esg_gmm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "optuna.*",
    "linearmodels.*",
    "statsmodels.*",
    "scipy.*",
    "matplotlib.*",
    "seaborn.*",
    "tqdm.*",
]
ignore_missing_imports = true
